<?php

/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which
 * runs before the init hook. The init hook is too late for some features, such
 * as indicating support for post thumbnails.
 */
function lightning_setup() {
	/*
		* Make theme available for translation.
		* Translations can be filed in the /languages/ directory.
		* If you're building a theme based on lightning, use a find and replace
		* to change 'lightning' to the name of your theme in all the template files.
	*/
	load_theme_textdomain('lightning', get_template_directory() . '/languages');

	// Add default posts and comments RSS feed links to head.
	add_theme_support('automatic-feed-links');

	add_theme_support('title-tag');

	// Enable support for Post Thumbnails on posts and pages.
	add_theme_support('post-thumbnails');

	register_nav_menus(
		array(
			'menu-1' => esc_html__('Primary', 'lightning'),
		)
	);

	// Switch default core markup for search form, comment form, and comments to output valid HTML5.
	add_theme_support(
		'html5',
		array(
			'search-form',
			'comment-form',
			'comment-list',
			'gallery',
			'caption',
			'style',
			'script',
		)
	);

	// Add theme support for selective refresh for widgets.
	add_theme_support('customize-selective-refresh-widgets');

	// Removes junk SVG code from body generated by Gutenberg even if it's not used.
	remove_action('wp_body_open', 'wp_global_styles_render_svg_filters');
}
add_action('after_setup_theme', 'lightning_setup');


/************** DISABLE MENU ITEMS IN WORDPRESS ADMIN **************/
add_action('admin_menu', function () {
	$user = wp_get_current_user();
	if (strpos($user->user_email, 'lightweb') === false) {
		$customizer_url = add_query_arg('return', urlencode(remove_query_arg(wp_removable_query_args(), wp_unslash($_SERVER['REQUEST_URI']))), 'customize.php');

		remove_menu_page('edit-comments.php');
		remove_menu_page('plugins.php');
		remove_submenu_page('themes.php', $customizer_url);
		remove_submenu_page('themes.php', 'widgets.php');
		remove_submenu_page('themes.php', 'themes.php');
		remove_submenu_page('plugins.php', 'plugin-editor.php');
	}
});

// in som cases we need to use the admin_init hook
add_action('admin_init', function () {
	$user = wp_get_current_user();
	if (strpos($user->user_email, 'lightweb') === false) {
		remove_submenu_page('themes.php', 'theme-editor.php');
	}
});
/************** / DISABLE MENU ITEMS IN WORDPRESS ADMIN **************/


// Disable Gutenberg for all posts
add_filter('use_block_editor_for_post', '__return_false', 10);


// Disable standard editor for some post types
add_action('admin_init', function () {
	remove_post_type_support('post', 'editor');
	remove_post_type_support('case', 'editor');
	remove_post_type_support('page', 'editor');
});


// Hide admin bar for lightweb users
add_action('init', function () {
	$user = wp_get_current_user();
	if (strpos($user->user_email, 'lightweb') !== false) {
		add_filter('show_admin_bar', '__return_false');
	}
});


// Remove dashboard widgets from welcome screen
function remove_dashboard_widgets() {
	global $wp_meta_boxes;

	unset($wp_meta_boxes['dashboard']['side']['core']['dashboard_quick_press']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_incoming_links']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_right_now']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_plugins']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_recent_drafts']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_recent_comments']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_site_health']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_activity']);
	unset($wp_meta_boxes['dashboard']['normal']['core']['welcome-panel']);
	unset($wp_meta_boxes['dashboard']['side']['core']['dashboard_primary']);
	unset($wp_meta_boxes['dashboard']['side']['core']['dashboard_secondary']);
	remove_meta_box('wpseo-dashboard-overview', 'dashboard', 'side');
	remove_meta_box('woocommerce_dashboard_status', 'dashboard', 'side');
	remove_action('welcome_panel', 'wp_welcome_panel');
}
add_action('wp_dashboard_setup', 'remove_dashboard_widgets');


// Add SVG to allowed file uploads
function add_file_types_to_uploads($file_types) {

	$new_filetypes = array();
	$new_filetypes['svg'] = 'image/svg+xml';
	$new_filetypes['svgz'] = 'image/svg+xml';
	$file_types = array_merge($file_types, $new_filetypes);

	return $file_types;
}
add_action('upload_mimes', 'add_file_types_to_uploads');


// Hide acf for non-Lightweb users
add_filter('acf/settings/show_admin', 'my_acf_show_admin');
function my_acf_show_admin($show) {
	$user = wp_get_current_user();
	if (strpos($user->user_email, 'lightweb') !== false) {
		return true;
	}
}

// Controls what's enabled in standard editor
function my_format_TinyMCE($in) {
	$in['block_formats'] = "Paragraph=p; Heading 1=h1; Heading 2=h2; Heading 3=h3; Heading 4=h4;";
	return $in;
}
add_filter('tiny_mce_before_init', 'my_format_TinyMCE');


add_filter('post_type_labels_post', function ($labels) {
	$labels->menu_name = 'Blogginlägg';
	return $labels;
});


// Remove prefix category on archive pages
add_filter('get_the_archive_title', function ($title) {
	if (is_category()) {
		$title = single_cat_title('', false);
	} elseif (is_tag()) {
		$title = single_tag_title('', false);
	} elseif (is_author()) {
		$title = '<span>' . get_the_author() . '</span>';
	}
	return $title;
});


// Move Yoast to bottom
add_filter('wpseo_metabox_prio', function () {
	return 'low';
});

// Change Gravity Forms validation error message
add_filter('gform_validation_message', 'lw_gform_validation_message', 10, 2);
function lw_gform_validation_message() {
	return '<h2 class="gform_submission_error hide_summary"><span class="gform-icon gform-icon--close"></span>' . __('Ett problem uppstod när ditt formulär skulle skickas. Granska rödmarkerade fält.', 'lightning') . '</h2>';
}


/**
 * Adds custom classes to the array of body classes.
 *
 * @param array $classes Classes for the body element.
 * @return array
 */
function lightning_body_classes($classes) {
	// Adds a class of hfeed to non-singular pages.
	if (!is_singular()) {
		$classes[] = 'hfeed';
	}

	// Adds a class of no-sidebar when there is no sidebar present.
	if (!is_active_sidebar('sidebar-1')) {
		$classes[] = 'no-sidebar';
	}

	return $classes;
}
add_filter('body_class', 'lightning_body_classes');

/**
 * Add a pingback url auto-discovery header for single posts, pages, or attachments.
 */
function lightning_pingback_header() {
	if (is_singular() && pings_open()) {
		printf('<link rel="pingback" href="%s">', esc_url(get_bloginfo('pingback_url')));
	}
}
add_action('wp_head', 'lightning_pingback_header');


add_filter('relevanssi_live_search_base_styles', '__return_false');
add_action('wp_enqueueu_scripts', function () {
	wp_dequeue_style('relevanssi-live-search');
}, 99);
